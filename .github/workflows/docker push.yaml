name: Create and publish all Docker images

on:
  push:
    branches: ['main', 'chore/back_admin_docker_image']
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: true
        default: 'Manual trigger'

jobs:
  build-yaki-backend-mobile:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and publish Yaki backend Docker image
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username phanatic --password-stdin
          cd yaki_backend
          docker build -t yaki_backend .
          docker tag yaki_backend ghcr.io/xpeho/yaki:backend-mobile-latest
          docker push ghcr.io/xpeho/yaki:backend-mobile-latest
  build-yaki-front-mobile:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          java-version: '17.x'
          distribution: 'temurin'
      - uses: subosito/flutter-action@v2
      - name: Install lcov
        run: |
          sudo apt update
          sudo apt install lcov
      - name: Build and publish Yaki front mobile Docker image
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username phanatic --password-stdin
          cd yaki_mobile
          flutter upgrade
          flutter pub get
          dart format --set-exit-if-changed .
          flutter analyze
          flutter test
          flutter build web
          docker build -t yaki_mobile .
          docker tag yaki_mobile ghcr.io/xpeho/yaki:front-mobile-latest
          docker push ghcr.io/xpeho/yaki:front-mobile-latest
  build-yaki-back-admin:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v3
        with:
          java-version: '17.x'
          distribution: 'temurin'
      - name: Build and publish Yaki back admin Docker image
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username phanatic --password-stdin
          cd yaki_admin_backend
          echo ${{ secrets.APPLICATION_PROPERTIES }} | base64 -d > src/main/resources/application.properties
          gradle clean build
          docker build -t yaki_admin_backend .
          docker tag yaki_admin_backend ghcr.io/xpeho/yaki:back-admin-latest
          docker push ghcr.io/xpeho/yaki:back-admin-latest