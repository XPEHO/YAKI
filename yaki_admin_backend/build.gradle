plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.sonarqube' version '4.2.1.3168'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
}

sonarqube {
    properties {
        property("sonar.projectKey", "yaki_admin_backend")
        property("sonar.projectName", "yaki_admin_backend")
    }
}

group = 'com.xpeho'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '17'

repositories {
    mavenCentral()
}

tasks.named("jar") {
    enabled = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation group: 'com.mailjet', name: 'mailjet-client', version: '4.2.0'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'org.springframework.security:spring-security-test:6.1.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'com.h2database:h2:2.1.214'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
    // ad jacoco for sonar scan coverage
    testImplementation 'org.jacoco:org.jacoco.core:0.8.10'


    test {
        useJUnitPlatform()
        systemProperty 'spring.config.name', 'application-test'
        finalizedBy jacocoTestReport // report is always generated after tests run
    }
    jacocoTestReport {
        reports {
            xml.required = true
        }
        dependsOn test // tests are required to run before generating the report
    }

    jacoco {
        toolVersion = "0.8.8"
    }
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10'
}

tasks.named('test') {
    useJUnitPlatform()
}
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}
kotlin {
    jvmToolchain(17)
}
