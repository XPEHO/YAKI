name: yaki
description: Open source project, with the goal of allowing employees to notify to their working team if they work remotely or on site. This app, also allow to any team lead to easyly see his coworker status on that matter.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.0.0+0

environment:
  sdk: ">=3.0.0 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.

dependencies:
  flutter:
    sdk: flutter

  # routing package for Flutter that uses the Router API to provide a convenient,
  # url-based API for navigating between different screens
  # https://pub.dev/packages/go_router
  # can now use : import 'package:go_router/go_router.dart';
  go_router: ^12.1.1
  dio: ^5.2.1+1

  # // Riverpod dependency //
  # This dependency allows for dependency injection and manage states
  # import 'package:hooks_riverpod/hooks_riverpod.dart'
  # link : https://riverpod.dev/docs/getting_started
  flutter_riverpod: ^2.4.9

  # // Retrofit dependency //
  # this dependency allows to make api requests thanks to annotations
  # import 'package:json_annotation/json_annotation.dart';
  # import 'package:retrofit/retrofit.dart';
  # import 'package:dio/dio.dart';
  # link : https://pub.dev/packages/retrofit
  retrofit: ">=4.0.0 <5.0.0"
  logger: ^2.0.2 #for logging purpose

  # easy_localization : manage app translation, use folder defined in assets "translations",
  # set .json (or others files) in this folder
  # https://pub.dev/packages/easy_localization
  # can now use : import 'package:json_serializable/json_serializable.dart';
  easy_localization: ^3.0.2-dev.2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  # // flutter_svg dependency //
  # provides a wrapper around Dart implementations of SVG parsing,
  # including SVG path data
  # https://pub.dev/packages/flutter_svg
  flutter_svg: ^2.0.7

  # // Shared preferences plugin //
  # Wraps platform-specific persistent storage for simple data
  # (NSUserDefaults on iOS and macOS, SharedPreferences on Android, etc.).
  # Data may be persisted to disk asynchronously,
  # no guarantee that writes will be persisted to disk after returning,
  # this plugin must not be used for storing critical data
  # https://pub.dev/packages/shared_preferences
  shared_preferences: ^2.2.2

  built_value: ^8.6.3
  json_annotation: ^4.8.0
  mockito: ^5.4.2
  very_good_cli: ^0.17.1
  golden_toolkit: ^0.15.0
  url_launcher: ^6.0.14
  # A librairy that handle your application icon
  flutter_launcher_icons: ^0.13.1

  yaki_ui:
    git:
      url: https://github.com/XPEHO/yaki_ui.git
      path: flutter
      ref: 0.7.4
  collection: ^1.17.2
  image_picker: ^1.0.4
  path_provider: ^2.1.1
  image: ^4.1.3

dev_dependencies:
  flutter_test:
    sdk: flutter

  integration_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  # Retrofit dependency
  retrofit_generator: ^8.0.4
  build_runner: ">=2.3.0 <4.0.0"
  json_serializable: ^6.7.1

  # Mockito 5.0.0 supports Dart's new null safety language feature in Dart 2.12, primarily
  # with code generation.
  # import 'package:mockito/annotations.dart';
  # import 'package:mockito/mockito.dart';
  # link : https://pub.dev/packages/mockito

  # This project contains APIs and utilities that build upon Flutter's Golden test functionality
  # to provide powerful UI regression tests.
  # import 'package:golden_toolkit/golden_toolkit.dart';
  # link : https://pub.dev/packages/golden_toolkit

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/translations/
    - assets/images/
    - assets/cer/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

# The following section is specific to flutter_launcher_icon package.
flutter_launcher_icons:
  android: true
  ios: true
  remove_alpha_ios: true
  web:
    generate: true
  image_path: "assets/images/yaki_basti_icon.png"
